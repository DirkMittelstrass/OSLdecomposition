n = c(10000,10000,100000))
diff(test_components$lambda)/diff(log(test_components$lambda))
diff(log(test_components$lambda)) / diff(test_components$lambda)
test_components <- data.frame(lambda = c(2,0.5,0.1,0.01, 0.002),
n = c(10000,10000,100000))
diff(log(test_components$lambda)) / diff(test_components$lambda)
test_components <- data.frame(lambda = c(0.5,0.01, 0.002),
n = c(10000,10000,100000))
diff(log(test_components$lambda)) / diff(test_components$lambda)
?Deoptim
citation("DEoptim")
A<- c(1,0.5,0.1)
diff(A)
diff(A) > 0
diff(A) < 0
sum(diff(A) < 0)
class(A)
sort(c(1,2,0.5))
sort(-c(1,2,0.5))
?sort(c(1,2,0.5))
sort(c(1,2,0.5), decreasing = TRUE)
paste0("Component ", 1:3)
diff(log(A)) / diff(A)
A
A <- c(2, 0.5, 0.4, 0.3, 0.001)
diff(log(A)) / diff(A)
1:2/3
1:3/4
20*1:2/3
20*1:4/5
B <- 20*1:4/5
A < B
B <- 20*1:5/6
A < B
A
A <- diff(log(A)) / diff(A)
A
B <- 20*1:4/5
A < B
pmin(A , B)
class(test_components)
ceiling(A/0.2)
c(ceiling(A/0.2), 200)
diff(log(2))
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/decompose_OSLcurve.R')
components <- data.frame(lambda = c(0.5,0.01, 0.002),
n = c(10000,10000,100000))
diff(log(components$lambda)) / diff(components$lambda)
curve <- simulate_OSLcurve(components)
decompose_OSLcurve(curve, components, verbose = TRUE)
source('C:/Users/mitte/Desktop/DEoptim_test.R')
col_set <- c(name, n, n.error, n.residual, initial.signal)
col_set <- c("name", "n", "n.error", "n.residual", "initial.signal")
col_set %in% colnames(components)
col_set[col_set %in% colnames(components)]
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/decompose_OSLcurve.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
View(curve)
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
View(components)
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
View(components)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/decompose_OSLcurve.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/decompose_OSLcurve.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/decompose_OSLcurve.R')
save.image("C:/Users/mitte/Desktop/R/OSLdecomposition/DevSpace.RData")
load("C:/Users/mitte/Desktop/R/OSLdecomposition/DevSpace.RData")
test <- decompose_OSLcurve(curve, c(3,1,0.01), error.calculation = "none", verbose = TRUE)
plot(curve)
plot(curve$time, curve$signal)
source('C:/Users/mitte/Desktop/DEoptim_test.R')
?chisq.test()
Filter()
sdfsdf
chi2 <- "a"
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R')
fit_OSLcurve(curve)
fit_OSLcurve(curve = curve)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R')
fit_OSLcurve(curve = curve)
library(Luminescence)
fit_OSLcurve(curve = curve)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/decompose_OSLcurve.R')
fit_OSLcurve(curve = curve)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/decompose_OSLcurve.R')
fit_OSLcurve(curve = curve)
save.image("C:/Users/mitte/Desktop/R/OSLdecomposition/DevSpace.RData")
load("C:/Users/mitte/Desktop/R/OSLdecomposition/DevSpace.RData")
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
save.image("C:/Users/mitte/Desktop/R/OSLdecomposition/DevSpace.RData")
TRUE || TRUE
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/simulate_OSLcurve.R')
?DEoptim
load("C:/Users/mitte/Desktop/R/OSLdecomposition/DevSpace.RData")
vignette("DEoptimPortfolioOptimization")
View(DE_min)
View(curve)
source('C:/Users/mitte/Desktop/DEoptim_test.R')
View(DE_min)
exp(0.4/0.2)
exp(0.4/0.5)
exp(0.4/0.4)
exp(-0.4/0.2)
exp(-0.4/0.1)
exp(-0.4/0.15)
exp(-0.4/0.1)
DE_min[["optim"]][["bestmem"]]
DE_min$optim$bestmem
DE_min$optim$bestmem[1]
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/simulate_OSLcurve.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/simulate_OSLcurve.R')
NA > 0
sum(NA)
sum(c(NA, NA),na.rm = TRUE)
sum(c(1, NA),na.rm = TRUE)
sum(c(1, NA),na.rm = FALSE)
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
1e-4
322000 * 1e-4
?apply
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/simulate_OSLcurve.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/simulate_OSLcurve.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/simulate_OSLcurve.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/simulate_OSLcurve.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
set.seed(1234)
4/0.001
4/0.01
4/0.1
c(1, NULL)
source('C:/Users/mitte/Desktop/DEoptim_test.R')
format(560983888)
formatC(560983888)
prettyNum(560983888)
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
?nls
?ave
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/decompose_OSLcurve.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
load("C:/Users/mitte/Desktop/R/OSLdecomposition/DevSpace.RData")
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/simulate_OSLcurve.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/decompose_OSLcurve.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
fit.formula
curve$time
c(n, lambda)
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
summary(fit)
coef(fit)
2.109e+00
lambda <- coef(fit)
lambda["lambda.1"]
lambda["lambda"]
lambda[paste0("lambda.", 1:4)]
coef(fit)[paste0("lambda.", 1:4)]
cat(coef(fit)[paste0("lambda.", 1:4)])
View(fit)
summary(fit)$parameters
test <- summary(fit)$parameters
View(test)
test[,2]
summary(fit)$parameters[,2]
summary(fit)$parameters[paste0("lambda.", 1:4),2]
summary(fit)$parameters[paste0("lambda.", 1:4),"Std. Error"]
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
?tapply
View(C)
View(C)
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
round(2, digits = 6)
formatC(2, digits = 6)
format(2, digits = 6)
formatC(0.005, digits = 6)
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
View(fit3)
summary(fit3)
residuals(fit3)
plot(fit3)
plot(C)
plot(C$signal)
?summary
anova(fit3)
anova(fit2)
fit3[["weights"]]
sum((residuals(fit3))^2)
sum((residuals(fit3)*fit3[["weights"]])^2)
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
rep(1, 10)
fit3[["m"]][["deviance"]]
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
sum(resid(fit3)^2)
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
save.image("C:/Users/mitte/Desktop/R/OSLdecomposition/DevSpace.RData")
load("C:/Users/mitte/Desktop/R/OSLdecomposition/DevSpace.RData")
lambda <- c(Fast = 2, Medium = 0.5, Slow1 = 0.1, Slow2 = 0.02)
X <- 1:length(lambda)
V.list <- list(n.Fast = c(0, 1000, 3000, 10000),
n.Medium = c(0, 1000, 3000),
n.Slow1 = c(0, 3000, 10000),
n.Slow2 = c(10000, 30000, 100000),
Background = c(0),
Channels = c(100, 200, 400),
Channel.width = c(0.1, 0.2, 0.5),
Additions = c(100, 500),
Chi.weight = c(FALSE, TRUE))
V.max <- NULL
for (i in 1:length(V.list)) {
V.max <- c(V.max, length(V.list[[i]]))
}
N <- prod(V.max)
cat("Number of scenarios:", N,"\n")
?numOSL::decomp
lambda <- c(Fast = 2, Medium = 0.5, Slow1 = 0.1, Slow2 = 0.02)
X <- 1:length(lambda)
V.list <- list(n.Fast = c(0, 1000, 3000, 10000),
n.Medium = c(0, 1000, 3000),
n.Slow1 = c(0, 3000, 10000),
n.Slow2 = c(10000, 30000, 100000),
Background = c(0),
Channels = c(100, 200, 400),
Channel.width = c(0.1, 0.2, 0.5),
Additions = c(100, 500),
Chi.weight = c(FALSE),
Algorithm = c("DEoptim","numOSL","minpack.lm"))
V.max <- NULL
for (i in 1:length(V.list)) {
V.max <- c(V.max, length(V.list[[i]]))
}
N <- prod(V.max)
cat("Number of scenarios:", N,"\n")
6000 / 60
lambda <- c(Fast = 2, Medium = 0.5, Slow1 = 0.1, Slow2 = 0.02)
X <- 1:length(lambda)
V.list <- list(n.Fast = c(0, 1000, 3000, 10000),
n.Medium = c(0, 1000, 3000),
n.Slow1 = c(0, 3000, 10000),
n.Slow2 = c(10000, 30000, 100000),
Background = c(0),
Channels = c(100, 200, 400),
Channel.width = c(0.1, 0.2, 0.5),
Additions = c(500),
Chi.weight = c(FALSE),
Algorithm = c("DEoptim","numOSL","minpack.lm"))
# from earlier simulations, we showed that the impact of uncorrected background signals,
# as well as from the number of additions is insignificant
# it was also shown, that unweighted fitting (Chi² = RSS) leads to more precise
# fast and medium component decay rates
V.max <- NULL
for (i in 1:length(V.list)) {
V.max <- c(V.max, length(V.list[[i]]))
}
N <- prod(V.max)
cat("Number of scenarios:", N,"\n")
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/plot_OSLcurve.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
library(ggpubr)
detach("package:ggpubr", unload = TRUE)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/plot_OSLcurve.R', encoding = 'UTF-8')
install.packages(c("backports", "broom", "codemetar", "credentials", "crul", "data.table", "deldir", "devtools", "dplyr", "foghorn", "fs", "glue", "httr", "miniCRAN", "nloptr", "pillar", "pkgbuild", "processx", "quantreg", "R.rsp", "raster", "Rcpp", "RcppArmadillo", "remotes", "rlang", "rvest", "sys", "tibble", "tidyr", "tinytex", "vctrs", "xfun"))
install.packages(c("backports", "broom", "codemetar", "credentials", "crul", "data.table", "deldir", "devtools", "dplyr", "foghorn", "fs", "glue", "httr", "miniCRAN", "nloptr", "pillar", "pkgbuild", "processx", "quantreg", "R.rsp", "raster", "Rcpp", "RcppArmadillo", "remotes", "rlang", "rvest", "sys", "tibble", "tidyr", "tinytex", "vctrs", "xfun"))
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/plot_OSLcurve.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/decompose_OSLcurve.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/simulate_OSLcurve.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/decompose_OSLcurve.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/simulate_OSLcurve.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
library("rlang")
?rlang
??rlang
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/decompose_OSLcurve.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/plot_OSLcurve.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/simulate_OSLcurve.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/plot_OSLcurve.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/plot_OSLcurve.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/plot_OSLcurve.R', encoding = 'UTF-8')
save.image("C:/Users/mitte/Desktop/R/OSLdecomposition/DevSpace.RData")
askYesNo()
askYesNo("te")
askYesNo("te")
c(1:3)[1:5]
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
list[1:5]
list[[1:5]]
list(1:5,"RSS")
list(paste0("K", 1:5),"RSS")
as.list(paste0("K", 1:5))
as.list(c(paste0("K", 1:5),"RSS"))
t <- as.list(c(paste0("K", 1:5),"RSS"))
names(t) <- c(paste0("K=", 1:5),"RSS"))
names(t) <- c(paste0("K=", 1:5),"RSS")
t
t <- as.list(rep(NULL, 6))
t
t <- as.list(rep(c(NULL), 6))
t
rep(c(NULL), 6)
rep(c(NA), 6)
formatC("")
formatC("-")
formatC(-)
round("")
round(NA)
formatC(0.000123)
formatC(0.00123)
formatC(0.0012312)
formatC(0.0012312, digits = 2)
formatC(0.0012312, digits = 3)
formatC(0.12312, digits = 3)
formatC(1.2312, digits = 3)
formatC(12.312, digits = 3)
formatC(c(12, 0.122, ""), digits = 3)
formatC(c(12, 0.122, NA), digits = 3)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
load("C:/Users/mitte/Desktop/R/OSLdecomposition/DevSpace.RData")
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
fit_OSLcurve(C)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
fit_OSLcurve(C)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
fit_OSLcurve(C)
"hh" + "ff"
"hh" & "ff"
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
fit_OSLcurve(C, K.max = 3)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
fit_OSLcurve(C, K.max = 3)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
fit_OSLcurve(C, K.max = 3)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
table_row <- fit_OSLcurve(C, K.max = 3)
table_row
table_row[(is.na(table_row))||(table_row == "Inf")]
table_row[table_row == (is.na(table_row))||(table_row == "Inf")]
table_row[is.na(table_row)]
table_row[which(is.na(table_row))]
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
fit_OSLcurve(C, K.max = 3)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
table_row <- fit_OSLcurve(C, K.max = 3)
formatC(table_row, digits = 4)
rep("", 5)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
table_row <- fit_OSLcurve(C, K.max = 3)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
table_row <- fit_OSLcurve(C, K.max = 3)
?format
lambda
formatC(lambda)
format(lambda)
format(lambda, digits = 4)
format(lambda, trim = 4)
formatC(lambda)[1]
formatC(lambda)[1:4]
table_row <- c(rep("", 3), formatC(23, digits = 4), formatC(34, digits = 4))
table_row
table_row <- c(rep("", 3), formatC(23, digits = 4), formatC(3434343, digits = 4))
table_row
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
fit_OSLcurve(C, K.max = 3)
4000 / (130 / 400)
4000 / (4200 / 400)
?formatC
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
fit_OSLcurve(C, K.max = 3)
table_row
A <- data.frame(NULL)
rbind(A, table_row)
A <- rbind(A, table_row)
rbind(A, table_row)
table_row[1] <- "asd"
rbind(A, table_row)
?rbind
rbind(A, table_row, stringsAsFactors = FALSE)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
fit_OSLcurve(C, K.max = 3)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
fit_OSLcurve(C, K.max = 3)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
fit_OSLcurve(C, K.max = 3, algorithm = "numOSL")
t <- fit_OSLcurve(C, K.max = 4)
t[1]
t[,1]
print(t[,1])
print(t)
?print
print.table(t)
print.table(t[,1])
print.table(t[1,])
print(t[1,])
writeLines(t[1,])
cat(t[1,])
print(as.vector(t[1,]))
?print.data.frame()
print(as.vector(t[1,]))[1,]
print(as.vector(t[1,]))[2,]
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
fit_OSLcurve(C, K.max = 3)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
fit_OSLcurve(C, K.max = 3)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
View(components)
formatC(components)
formatC(components[,1])
formatC(components[1,])
formatC(components[,2])
formatC(components[,5])
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
fit_OSLcurve(C, K.max = 5)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
?print.data.frame
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R', encoding = 'UTF-8')
save.image("C:/Users/mitte/Desktop/R/OSLdecomposition/DevSpace.RData")
