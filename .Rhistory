Oy7_fast <- analyse_SAR.CWOSL_decomposed(Oy7, OSL.component = 1)
Oy7_fast <- analyse_SAR.CWOSL_decomposed(Oy7, OSL.component = 1)
Oy7$DECOMPOSITION$parameters$record.type
View(Oy7)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/analyse_SAR.CWOSL_decomposed.R')
Oy7_fast <- analyse_SAR.CWOSL_decomposed(Oy7, OSL.component = 1)
Oy7_fast <- analyse_SAR.CWOSL_decomposed(Oy7, OSL.component = 1)
get_RLum(Oy7[[1]], recordType = "OSL", get.index = TRUE)
get_RLum(Oy7[[1]], recordType = "OSL2", get.index = TRUE)
?get_RLum
get_RLum(Oy7, recordType = "OSL2", get.index = TRUE)
get_RLum(Oy7[[1]], recordType = "OSL2", get.index = TRUE)
get_RLum(Oy7[[1]], recordType = "OS", get.index = TRUE)
get_RLum(Oy7[[1]], recordType = "OSL$", get.index = TRUE)
get_RLum(Oy7[[1]], recordType = "$OSL", get.index = TRUE)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/analyse_SAR.CWOSL_decomposed.R')
Oy7_fast <- analyse_SAR.CWOSL_decomposed(Oy7, OSL.component = 1)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/RLum.OSL_global_fitting.R')
View(Oy7)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/examples/example_Oy7.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/examples/example_FB.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/examples/example_FB.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/examples/example_FB.R')
plot_KDE(list(FB_classic_results,
FB_fast_De))
View(FB_decomposed)
get_RLum(FB_decomposed[[1]], recordType = "OSL$", get.index = TRUE)
get_RLum(FB_decomposed[[11]], recordType = "OSL$", get.index = TRUE)
FB_classic_results <- analyse_SAR.CWOSL_decomposed(FB_corrected, 1, 10, 800, 999)
# black: late background, red: fast component
plot_KDE(list(FB_classic_results,
FB_fast_De))
FB_classic_results <- analyse_SAR.CWOSL_decomposed(FB_corrected, 1, 10, 800, 999)
# black: late background, red: fast component
plot_KDE(list(FB_classic_results,
FB_fast_De))
plot_KDE(list(FB_classic_results,
FB_fast_De))
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/analyse_SAR.CWOSL_decomposed.R')
FB_classic_results <- analyse_SAR.CWOSL_decomposed(FB_corrected, 1, 10, 800, 999)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/analyse_SAR.CWOSL_decomposed.R')
FB_classic_results <- analyse_SAR.CWOSL_decomposed(FB_corrected, 1, 10, 800, 999)
plot_KDE(list(FB_classic_results,
FB_fast_De))
View(FB_classic_results)
plot_KDE(FB_classic_results)
FB_early_back <- analyse_SAR.CWOSL_decomposed(FB_corrected, 1, 10, 11, 25)
# be aware that late background subtraction results in overestimated background.error
# for background corrected data
FB_late_back <- analyse_SAR.CWOSL_decomposed(FB, 1, 10, 800, 999)
# black: late background, red: fast component
plot_KDE(list(FB_late_back,
FB_early_back,
FB_fast_De))
FB_early_back <- analyse_SAR.CWOSL_decomposed(FB, 1, 10, 11, 25)
# be aware that late background subtraction results in overestimated background.error
# for background corrected data
FB_late_back <- analyse_SAR.CWOSL_decomposed(FB, 1, 10, 800, 999)
# black: late background, red: fast component
plot_KDE(list(FB_late_back,
FB_early_back,
FB_fast_De))
View(FB)
FB[[1]]@records[[1]]@data
plot(FB[[1]]@records[[1]]@data)
FB_corrected[[1]]@records[[1]]@data
plot(FB[[11]]@records[[1]]@data)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/examples/example_FB.R')
plot_KDE(list(FB_late_back,
FB_fast_De))
source('C:/Users/mitte/Desktop/R/OSLdecomposition/examples/example_CW.OSL.Data.R')
View(OSLdata_fitted)
OSLdata_fitted[["OSL_COMPONENTS"]][["parameters"]][["record_type"]]
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/RLum.OSL_global_fitting.R')
OSLdata_fitted <- RLum.OSL_global_fitting(OSLdata_corrected,
stimulation_intensity = 75)
View(OSLdata_corrected)
View(OSLdata_fitted)
fit.data <- OSLdata_fitted[["OSL_COMPONENTS"]]
fit_data <- OSLdata_fitted[["OSL_COMPONENTS"]]
data_set <- OSLdata_fitted[1:24]
Last_changed <- "2020-05-09"
### Further planned content:
# * sheme about the steps with Step 1 highlighted into BASICS
library(kableExtra)
library(numOSL)
library(knitr)
library(ggplot2)
library(gridExtra)
knitr::opts_chunk$set(fig.width=7,
fig.asp=.6,
results = "asis",
warning=FALSE,
message=FALSE,
error=FALSE,
echo=FALSE,
cache=FALSE)
# Find out the overall number of 'record_type' curves
# ToDo: Get this info (and the global_average data) directly from sum_OSLcurves outout
record_type <- fit_data$parameters$record_type
n.curves <- 0
for (j in 1:length(data_set)) {
for (i in 1:length(data_set[[j]]@records)) {
if (data_set[[j]]@records[[i]]@recordType == record_type) n.curves <- n.curves + 1
}
}
OSLdata_fitted <- RLum.OSL_global_fitting(OSLdata_corrected,
stimulation_intensity = 75,
report = FALSE)
warnings()
OSLdata_fitted <- RLum.OSL_global_fitting(OSLdata_corrected,
stimulation_intensity = 75,
report = TRUE)
names(data_set[[1]])
sum(names(data_set[[1]]) == record_type)
sum(names(data_set) == record_type)
sum(names(data_set[1:2]) == record_type)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/examples/example_BT594.R')
remove.packages("OSLdecomposition", lib="~/R/win-library/3.6")
install.packages("C:/Users/mitte/Desktop/R/OSLdecomposition_0.6.30.tar.gz", repos = NULL, type = "source")
remove.packages("OSLdecomposition", lib="~/R/win-library/3.6")
install.packages("C:/Users/mitte/Desktop/R/OSLdecomposition_0.6.30.tar.gz", repos = NULL, type = "source")
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/analyse_SAR.CWOSL_decomposed.R')
remove.packages("OSLdecomposition", lib="~/R/win-library/3.6")
install.packages("C:/Users/mitte/Desktop/R/OSLdecomposition_0.6.30.tar.gz", repos = NULL, type = "source")
remove.packages("OSLdecomposition", lib="~/R/win-library/3.6")
install.packages("C:/Users/mitte/Desktop/R/OSLdecomposition_0.6.30.tar.gz", repos = NULL, type = "source")
?wfct
?nls
1^-1
1^-2
10^-2
10^-1
10^-3
?eval
A <- as.formula("y ~ x * 2")
A
A(2)
library(OSLdecomposition)
?numOSL::decomp
test_components <- data.frame(lambda = c(2,0.5,0.1),
n = c(10000,10000,100000))
diff(test_components$lambda)/diff(log(test_components$lambda))
diff(log(test_components$lambda)) / diff(test_components$lambda)
test_components <- data.frame(lambda = c(2,0.5,0.1,0.01, 0.002),
n = c(10000,10000,100000))
diff(log(test_components$lambda)) / diff(test_components$lambda)
test_components <- data.frame(lambda = c(0.5,0.01, 0.002),
n = c(10000,10000,100000))
diff(log(test_components$lambda)) / diff(test_components$lambda)
?Deoptim
citation("DEoptim")
A<- c(1,0.5,0.1)
diff(A)
diff(A) > 0
diff(A) < 0
sum(diff(A) < 0)
class(A)
sort(c(1,2,0.5))
sort(-c(1,2,0.5))
?sort(c(1,2,0.5))
sort(c(1,2,0.5), decreasing = TRUE)
paste0("Component ", 1:3)
diff(log(A)) / diff(A)
A
A <- c(2, 0.5, 0.4, 0.3, 0.001)
diff(log(A)) / diff(A)
1:2/3
1:3/4
20*1:2/3
20*1:4/5
B <- 20*1:4/5
A < B
B <- 20*1:5/6
A < B
A
A <- diff(log(A)) / diff(A)
A
B <- 20*1:4/5
A < B
pmin(A , B)
class(test_components)
ceiling(A/0.2)
c(ceiling(A/0.2), 200)
diff(log(2))
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/decompose_OSLcurve.R')
components <- data.frame(lambda = c(0.5,0.01, 0.002),
n = c(10000,10000,100000))
diff(log(components$lambda)) / diff(components$lambda)
curve <- simulate_OSLcurve(components)
decompose_OSLcurve(curve, components, verbose = TRUE)
source('C:/Users/mitte/Desktop/DEoptim_test.R')
col_set <- c(name, n, n.error, n.residual, initial.signal)
col_set <- c("name", "n", "n.error", "n.residual", "initial.signal")
col_set %in% colnames(components)
col_set[col_set %in% colnames(components)]
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/decompose_OSLcurve.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
View(curve)
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
View(components)
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
View(components)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/decompose_OSLcurve.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/decompose_OSLcurve.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/decompose_OSLcurve.R')
save.image("C:/Users/mitte/Desktop/R/OSLdecomposition/DevSpace.RData")
load("C:/Users/mitte/Desktop/R/OSLdecomposition/DevSpace.RData")
test <- decompose_OSLcurve(curve, c(3,1,0.01), error.calculation = "none", verbose = TRUE)
plot(curve)
plot(curve$time, curve$signal)
source('C:/Users/mitte/Desktop/DEoptim_test.R')
?chisq.test()
Filter()
sdfsdf
chi2 <- "a"
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R')
fit_OSLcurve(curve)
fit_OSLcurve(curve = curve)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/fit_OSLcurve.R')
fit_OSLcurve(curve = curve)
library(Luminescence)
fit_OSLcurve(curve = curve)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/decompose_OSLcurve.R')
fit_OSLcurve(curve = curve)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/decompose_OSLcurve.R')
fit_OSLcurve(curve = curve)
save.image("C:/Users/mitte/Desktop/R/OSLdecomposition/DevSpace.RData")
load("C:/Users/mitte/Desktop/R/OSLdecomposition/DevSpace.RData")
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
save.image("C:/Users/mitte/Desktop/R/OSLdecomposition/DevSpace.RData")
TRUE || TRUE
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/simulate_OSLcurve.R')
?DEoptim
load("C:/Users/mitte/Desktop/R/OSLdecomposition/DevSpace.RData")
vignette("DEoptimPortfolioOptimization")
View(DE_min)
View(curve)
source('C:/Users/mitte/Desktop/DEoptim_test.R')
View(DE_min)
exp(0.4/0.2)
exp(0.4/0.5)
exp(0.4/0.4)
exp(-0.4/0.2)
exp(-0.4/0.1)
exp(-0.4/0.15)
exp(-0.4/0.1)
DE_min[["optim"]][["bestmem"]]
DE_min$optim$bestmem
DE_min$optim$bestmem[1]
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/simulate_OSLcurve.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/simulate_OSLcurve.R')
NA > 0
sum(NA)
sum(c(NA, NA),na.rm = TRUE)
sum(c(1, NA),na.rm = TRUE)
sum(c(1, NA),na.rm = FALSE)
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
1e-4
322000 * 1e-4
?apply
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/simulate_OSLcurve.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/simulate_OSLcurve.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/simulate_OSLcurve.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/simulate_OSLcurve.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
set.seed(1234)
4/0.001
4/0.01
4/0.1
c(1, NULL)
source('C:/Users/mitte/Desktop/DEoptim_test.R')
format(560983888)
formatC(560983888)
prettyNum(560983888)
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R')
?nls
?ave
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/decompose_OSLcurve.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
load("C:/Users/mitte/Desktop/R/OSLdecomposition/DevSpace.RData")
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/simulate_OSLcurve.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/decompose_OSLcurve.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
fit.formula
curve$time
c(n, lambda)
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
summary(fit)
coef(fit)
2.109e+00
lambda <- coef(fit)
lambda["lambda.1"]
lambda["lambda"]
lambda[paste0("lambda.", 1:4)]
coef(fit)[paste0("lambda.", 1:4)]
cat(coef(fit)[paste0("lambda.", 1:4)])
View(fit)
summary(fit)$parameters
test <- summary(fit)$parameters
View(test)
test[,2]
summary(fit)$parameters[,2]
summary(fit)$parameters[paste0("lambda.", 1:4),2]
summary(fit)$parameters[paste0("lambda.", 1:4),"Std. Error"]
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
?tapply
View(C)
View(C)
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
round(2, digits = 6)
formatC(2, digits = 6)
format(2, digits = 6)
formatC(0.005, digits = 6)
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
View(fit3)
summary(fit3)
residuals(fit3)
plot(fit3)
plot(C)
plot(C$signal)
?summary
anova(fit3)
anova(fit2)
fit3[["weights"]]
sum((residuals(fit3))^2)
sum((residuals(fit3)*fit3[["weights"]])^2)
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
rep(1, 10)
fit3[["m"]][["deviance"]]
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
sum(resid(fit3)^2)
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
save.image("C:/Users/mitte/Desktop/R/OSLdecomposition/DevSpace.RData")
load("C:/Users/mitte/Desktop/R/OSLdecomposition/DevSpace.RData")
lambda <- c(Fast = 2, Medium = 0.5, Slow1 = 0.1, Slow2 = 0.02)
X <- 1:length(lambda)
V.list <- list(n.Fast = c(0, 1000, 3000, 10000),
n.Medium = c(0, 1000, 3000),
n.Slow1 = c(0, 3000, 10000),
n.Slow2 = c(10000, 30000, 100000),
Background = c(0),
Channels = c(100, 200, 400),
Channel.width = c(0.1, 0.2, 0.5),
Additions = c(100, 500),
Chi.weight = c(FALSE, TRUE))
V.max <- NULL
for (i in 1:length(V.list)) {
V.max <- c(V.max, length(V.list[[i]]))
}
N <- prod(V.max)
cat("Number of scenarios:", N,"\n")
?numOSL::decomp
lambda <- c(Fast = 2, Medium = 0.5, Slow1 = 0.1, Slow2 = 0.02)
X <- 1:length(lambda)
V.list <- list(n.Fast = c(0, 1000, 3000, 10000),
n.Medium = c(0, 1000, 3000),
n.Slow1 = c(0, 3000, 10000),
n.Slow2 = c(10000, 30000, 100000),
Background = c(0),
Channels = c(100, 200, 400),
Channel.width = c(0.1, 0.2, 0.5),
Additions = c(100, 500),
Chi.weight = c(FALSE),
Algorithm = c("DEoptim","numOSL","minpack.lm"))
V.max <- NULL
for (i in 1:length(V.list)) {
V.max <- c(V.max, length(V.list[[i]]))
}
N <- prod(V.max)
cat("Number of scenarios:", N,"\n")
6000 / 60
lambda <- c(Fast = 2, Medium = 0.5, Slow1 = 0.1, Slow2 = 0.02)
X <- 1:length(lambda)
V.list <- list(n.Fast = c(0, 1000, 3000, 10000),
n.Medium = c(0, 1000, 3000),
n.Slow1 = c(0, 3000, 10000),
n.Slow2 = c(10000, 30000, 100000),
Background = c(0),
Channels = c(100, 200, 400),
Channel.width = c(0.1, 0.2, 0.5),
Additions = c(500),
Chi.weight = c(FALSE),
Algorithm = c("DEoptim","numOSL","minpack.lm"))
# from earlier simulations, we showed that the impact of uncorrected background signals,
# as well as from the number of additions is insignificant
# it was also shown, that unweighted fitting (Chi² = RSS) leads to more precise
# fast and medium component decay rates
V.max <- NULL
for (i in 1:length(V.list)) {
V.max <- c(V.max, length(V.list[[i]]))
}
N <- prod(V.max)
cat("Number of scenarios:", N,"\n")
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/plot_OSLcurve.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
library(ggpubr)
detach("package:ggpubr", unload = TRUE)
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/plot_OSLcurve.R', encoding = 'UTF-8')
install.packages(c("backports", "broom", "codemetar", "credentials", "crul", "data.table", "deldir", "devtools", "dplyr", "foghorn", "fs", "glue", "httr", "miniCRAN", "nloptr", "pillar", "pkgbuild", "processx", "quantreg", "R.rsp", "raster", "Rcpp", "RcppArmadillo", "remotes", "rlang", "rvest", "sys", "tibble", "tidyr", "tinytex", "vctrs", "xfun"))
install.packages(c("backports", "broom", "codemetar", "credentials", "crul", "data.table", "deldir", "devtools", "dplyr", "foghorn", "fs", "glue", "httr", "miniCRAN", "nloptr", "pillar", "pkgbuild", "processx", "quantreg", "R.rsp", "raster", "Rcpp", "RcppArmadillo", "remotes", "rlang", "rvest", "sys", "tibble", "tidyr", "tinytex", "vctrs", "xfun"))
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/plot_OSLcurve.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/decompose_OSLcurve.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/simulate_OSLcurve.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/decompose_OSLcurve.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/simulate_OSLcurve.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
library("rlang")
?rlang
??rlang
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/decompose_OSLcurve.R')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/plot_OSLcurve.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/simulate_OSLcurve.R')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/plot_OSLcurve.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/DEoptim_test.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/plot_OSLcurve.R', encoding = 'UTF-8')
source('C:/Users/mitte/Desktop/R/OSLdecomposition/R/plot_OSLcurve.R', encoding = 'UTF-8')
save.image("C:/Users/mitte/Desktop/R/OSLdecomposition/DevSpace.RData")
