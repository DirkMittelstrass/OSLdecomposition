% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_OSLcurve.R
\name{plot_OSLcurve}
\alias{plot_OSLcurve}
\title{Advanced plot function for decomposed OSL curves and component data}
\usage{
plot_OSLcurve(
  curve = NULL,
  components,
  display = "detailed",
  zoom = 1,
  algorithm = "",
  hide_plot = FALSE,
  title = NULL
)
}
\arguments{
\item{display}{Choices: "detailed" (default), "components", "raw" ,"compare_lin", "compare_log", "lin-log"}

\item{hide_plot}{If true, plot is not drawn but can be catched by 'A <- plot_OSLcurve(...)'
and displayed later by 'grid.arrange(A)'}

\item{title}{}
}
\description{
Advanced plot function for decomposed OSL curves and component data
}
\section{Notes}{


pseudoLM-OSL curves are created using the transformation described in Bulur (2000):

$$ I_{LM}(t') = \frac{t'}{P}I_{CW}(t)  $$
$$ t' = \sqrt{2Pt} $$

The stimulation ramp duration $P$ is double the continous stimulation duration $t_{CW}$:

$$ P = 2t_{CW}$$

See Bos and Wallinga (2012) for a detailed explanation and discussion
}

\section{Changelog}{

* 2019-03-06, DM: First reasonable version
* 2019-04-03, DM: Rebuild whole function
* 2019-05-03, DM: Checks now curve format; added x-axis zoom
* 2019-10-02, DM: Added background component support and some little tweaks
* 2020-04-22, DM: Enabled hidden output
* 2020-06-19, DM: Added pseudoLM-OSL diagrams
* 2020-08-04, DM: Added subtitles and RSS info
}

\section{ToDo}{

* REFACTORIZE CODE
* ! Put the ggplot building (or at least its style options) in its own sub-function !
* When drawing components without curve, skip residual curve
* Display fitting formula
* Cut data set while zooming to improve performance
* Debug residual curve zoom
* Get rid of libraries 'scale' and 'ggpubr' to decrease dependencies
* Change from library("XXX") to XXX::
}

\section{Last changed. 2020-08-04}{
NA
}

\examples{

# Set some reasonable parameter for a weak quartz CW-OSL decay
components <- data.frame(name = c("fast", "medium", "slow"), lambda = c(1.5, 0.5, 0.1), n = c(1000, 1000, 10000))

# Simulate the CW-OSL curve and add some signal noise
curve <- simulate_OSLcurve(components, simulate.curve = TRUE, add.poisson.noise = TRUE)

# Display the simulated curve
plot_OSLcurve(curve, components)

}
\references{
Bos, A. J. J. and Wallinga, J.: How to visualize quartz OSL signal components, Radiation Measurements, 47(9), 752–758, doi:10.1016/j.radmeas.2012.01.013, 2012.

Bulur, E.: A simple transformation for converting CW-OSL curves to LM-OSL curves, Radiation Measurements, 32(2), 141–145, doi:10.1016/S1350-4487(99)00247-4, 2000.

Mittelstraß, D., Schmidt, C., Beyer, J., Heitmann, J. and Straessner, A.:
Automated identification and separation of quartz CW-OSL signal components with R, *in preparation*.
}
\author{
Dirk Mittelstrass, \email{dirk.mittelstrass@luminescence.de}
}
