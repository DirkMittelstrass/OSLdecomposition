% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_OSLcurve.R
\name{simulate_OSLcurve}
\alias{simulate_OSLcurve}
\title{Calculates component decay signals and can simulate CW-OSL curves}
\usage{
simulate_OSLcurve(
  components,
  template.curve = NULL,
  channel.width = 0.1,
  channel.number = 400,
  component.selection = NA,
  simulate.curve = FALSE,
  round.values = TRUE,
  add.poisson.noise = TRUE,
  add.gaussian.noise = 0,
  add.background = 0
)
}
\arguments{
\item{components}{[data.frame] (**required**):
Table with the component parameters. It needs the rows "lambda" and "n" containing numeric values}

\item{template.curve}{[data.frame] (*with default*):
OSL curve providing its x-axis (time axis) as template. The signal values of this curve are NOT used.}

\item{channel.width}{[numeric] (*with default*):
channel width in seconds}

\item{channel.number}{[integer] (*with default*):
number of channels resp. data points}

\item{component.selection}{[vector] (*with default*):
Which component curves shall be calculated? Can be a single number or a selection. If NA, all are added together.}

\item{add.poisson.noise}{[logical] (*with default*):
adds poisson distributed noise to input signal}

\item{add.gaussian.noise}{[numeric] (*with default*):
standard deviation of the detection background in **cts/s**}

\item{add.background}{[numeric] (*with default*):
background caused signal offset in **cts/s**}
}
\value{
**CW-OSL curve**
A [data.frame] with X = $time and Y = $signal
}
\description{
The function builds a CW-OSL curve from the parameters of its components
or adds component columns to an existing curve. This is used to calculate residual signals in
[fit_OSLcurve] and [decompose_OSLcurve], display component curves with [plot_OSLcurve] and was used to
perform simulations.
}
\section{Changelog}{

* 2019-03-04, DM: combined old code fragments from 2014 to this function
* 2019-03-06, DM: works now well with [plot_OSLcurve]
* 2019-10-02, DM: added background component
* 2020-07-24, DM: value rounding when curve simulated now optional; little tweaks to increase performance
}

\section{ToDo}{

* Check literature for exact noise model
* Add not-first-order case
* expand Roxygen comments
}

\section{Last changed}{
 2020-08-27
}

\examples{

# Set some reasonable parameter for a weak quartz CW-OSL decay
components <- data.frame(name = c("fast", "medium", "slow"), lambda = c(1.5, 0.5, 0.1), n = c(1000, 1000, 10000))

# Simulate the CW-OSL curve and add some signal noise
curve <- simulate_OSLcurve(components, simulate.curve = TRUE, add.poisson.noise = TRUE)

# Display the simulated curve
plot_OSLcurve(curve, components)

}
\references{
MittelstraÃŸ, D., Schmidt, C., Beyer, J., Heitmann, J. and Straessner, A.:
Automated identification and separation of quartz CW-OSL signal components with R, *in preparation*.
}
\author{
Dirk Mittelstrass, \email{dirk.mittelstrass@luminescence.de}
}
