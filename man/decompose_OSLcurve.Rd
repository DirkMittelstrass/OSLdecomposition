% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/decompose_OSLcurve.R
\name{decompose_OSLcurve}
\alias{decompose_OSLcurve}
\title{multi-exponential CW-OSL decomposition}
\usage{
decompose_OSLcurve(
  curve,
  components,
  background.fitting = FALSE,
  algorithm = "det",
  error.calculation = "empiric",
  verbose = TRUE
)
}
\arguments{
\item{curve}{\linkS4class{RLum.Data.Curve} or \link{data.frame} or \link{matrix} (\strong{required}):
CW-OSL record. \verb{$time} or first column (x-axis) for the measurement time (must have constant time intervals),
\verb{$signal} or second column (y-axis) for the signal values. Further columns will be ignored}

\item{components}{\link{data.frame} or \link{numeric} vector (\strong{required}):
Either a vector containing the decay parameters of the CW-OSL components or a table (data.frame), usually the table returned by \link{fit_OSLcurve}.
In case of a vector: It is recommended to use less than 7 parameters. The parameters will be sorted in decreasing order.
In case of a data.frame. One column must be named \emph{$lambda}.
It is recommended to provide also integration interval parameters (columns \emph{t.start, t.end, ch.start, ch.end}),
which can be found by applying \link{optimise_OSLintervals} on the global mean curve, calculated by \link{sum_OSLcurves}.
If one or more column is missing, a simple interval definition algorithm is run automatically (see \strong{Notes})..}

\item{algorithm}{}

\item{error.calculation}{(\emph{with default}):
integral error estimation approach, either \strong{"empiric"} or \strong{"poisson"} or \link{numeric} value;
Per default the data of \emph{curve$residual} provided by \link{simulate_OSLcurve} is used to calculate an \strong{empiric} standard error for each integral which will be processed in the error propagation formula.
Alternatively the integral standard error can be calculated by assuming a \strong{poisson} distributed signal error, known as \emph{Shot noise}.
This is suitable if the lack of data points on the x-axis circumvent an empiric error estimation, like with spatial or spectral resolved CCD measurements.
Also the parameter can be set to a \link{numeric} value; which will be handled as standard deviation per channel and added to the poisson distributed \emph{Shot noise}.
If no error calculation is wished, set the argument to \strong{"none"}. This reduces the necessary computing time heavily.}

\item{verbose}{\link{logical} (\emph{with default}):
enables text output}
}
\value{
The input table \strong{components} \link{data.frame} will be returned with added or overwritten columns: \emph{$n, $n.error, $n.residual, $I, $I.error}
}
\description{
The function calculates the CW-OSL component intensities by building an equation system
and solving it by a determinant-based algorithm (Cramers rule).
It also estimates the standard deviation of the amplitudes by using the error propagation method applied at Cramers rule.
}
\section{Last changed}{
 2020-08-27
}

\examples{

# Set some reasonable parameter for a weak quartz CW-OSL decay
components <- data.frame(name = c("fast", "medium", "slow"), lambda = c(1.5, 0.5, 0.1), n = c(1000, 1000, 10000))

# Simulate the CW-OSL curve and add some signal noise and some detection background
curve <- simulate_OSLcurve(components, simulate.curve = TRUE, add.poisson.noise = TRUE, add.background = 40)

# Let us decompose the simulated curve
components <- decompose_OSLcurve(curve, components)

# Display the component separation results
plot_OSLcurve(curve, components)

### Decomposition including signal background fitting:

# We need to define a background integration interval
components <- optimise_OSLintervals(components, curve, background.fitting = TRUE)

# Decompose again and view results
components <- decompose_OSLcurve(curve, components, background.fitting = TRUE)
plot_OSLcurve(curve, components)

}
\references{
MittelstraÃŸ, D., Schmidt, C., Beyer, J., Heitmann, J. and Straessner, A.:
Automated identification and separation of quartz CW-OSL signal components with R, \emph{in preparation}.
}
\seealso{
\link{fit_OSLcurve}, \link{optimise_OSLintervals}, \link{RLum.OSL_decomposition}, \link[minpack.lm:nlsLM]{minpack.lm::nlsLM}
}
\author{
Dirk Mittelstrass, \email{dirk.mittelstrass@luminescence.de}
}
